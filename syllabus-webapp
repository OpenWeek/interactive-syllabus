#!/usr/bin/env python3

# -*- coding: utf-8 -*-
#
#    This file belongs to the Interactive Syllabus project
#
#    Copyright (C) 2017  Alexandre Dubray, François Michel
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published
#    by the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
import shutil

import syllabus
import os
import yaml

from syllabus.utils import pages

default_toc = \
    {
        "contribuer": {
            "title": "Contribuer au syllabus",
            "content": {
                "contribuer": {
                    "title": "Contribuer au contenu du syllabus"
                },
                "create_task": {
                    "title": "Créer une tâche INGInious"
                }
            }
        }
    }


def ask_question_yes_no(question, default):
    default_answer = "No" if default == "n" else "Yes"
    while True:
        try:
            text_answer = input("{} [y/n] (Default: {})".format(question, default_answer))
        except EOFError:
            return default == 'y'
        answer = text_answer.lower()
        if answer == '\n':
            return default == 'y'
        elif answer != 'y' and answer != 'n':
            print("Please answer y or n")
        else:
            return text_answer == "y"


if __name__ == '__main__':
    config = syllabus.get_config()
    for course in config["courses"]:
        course_config = config["courses"][course]
        path = syllabus.get_pages_path(course)
        if 'git' in course_config['pages']:
            pages.init_and_sync_repo(course)
        create_toc = False
        if not os.path.isdir(path) and not os.path.isfile(path):
            create_dir = ask_question_yes_no("No pages directory found in %s. Would you like "
                                             "to create it ?" % (course_config["pages"]["path"] or os.getcwd()), "n")
            if create_dir:
                shutil.copytree(os.path.join(syllabus.get_root_path(), "default", "pages"), path)
            else:
                print("You need a page directory for every course!")
                exit()
        if not os.path.isfile(os.path.join(path, "toc.yaml")):
            with open(os.path.join(path, "toc.yaml"), "w+") as f:
                yaml.dump(default_toc, f)
    from syllabus.inginious_syllabus import main

    main()
